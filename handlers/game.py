from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import ContextTypes
from quiz_data import get_question
from models import Session, User, add_score   # —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ add_score —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞

async def play(update: Update, context: ContextTypes.DEFAULT_TYPE):
    q = update.callback_query
    await q.answer()
    cat, question, opts, right = get_question()
    context.user_data["right"] = right
    kb = [[InlineKeyboardButton(opt, callback_data=f"ans_{opt}") for opt in opts]]
    if question.get("img"):
        await q.edit_message_media(
            media=InputMediaPhoto(question["img"], caption=f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {cat}\n{question}"),
            reply_markup=InlineKeyboardMarkup(kb)
        )
    else:
        await q.edit_message_text(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {cat}\n{question}", reply_markup=InlineKeyboardMarkup(kb))

async def answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    q = update.callback_query
    ans = q.data.replace("ans_", "")
    uid = q.from_user.id
    if ans == context.user_data.get("right"):
        add_score(uid, 10)
        txt = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! +10"
    else:
        txt = f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {context.user_data['right']}"
    kb = [[InlineKeyboardButton("–ï—â—ë –≤–æ–ø—Ä–æ—Å", callback_data="play")]]
    await q.edit_message_text(
    "üìã –ü—Ä–∞–≤–∏–ª–∞:\n"
    "‚Ä¢ 1 –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç = +10 –±–∞–ª–ª–æ–≤.\n"
    "‚Ä¢ –ú–µ–º-–≤–æ–ø—Ä–æ—Å—ã ‚Äì —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç.\n"
    "‚Ä¢ –ì–æ–ª–æ—Å–æ–≤—ã–µ ‚Äì —è –≥–æ–≤–æ—Ä—é, —Ç—ã –æ—Ç–≤–µ—á–∞–µ—à—å –≥–æ–ª–æ—Å–æ–º ‚Äì +15 –±–∞–ª–ª–æ–≤.\n"
    "‚Ä¢ 2048 ‚Äì –¥–æ–≤–µ–¥–∏ –¥–æ 2048 –∏ –ø–æ–ª—É—á–∏ +200 –±–∞–ª–ª–æ–≤.",
    reply_markup=InlineKeyboardMarkup(kb)
)